
#user  root;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

	# 同下面示例1同理，只是将默认访问的文件夹为root文件夹，即根目录。也就是说默认访问根目录。只要是通过ip访问，或者是通过没有绑定的域名访问，示例2就是被绑定的域名。
    server {
        listen       80;
        server_name  localhost;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;
        #redirect server error pages to the static page /50x.html

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
	
	# nginx反向代理示例1：将来自域名www.yichunhong.com的访问转发到当前系统的指定文件夹中的页面，listen表示监听的端口；server_name表示的是访问的域名，该域名必须是绑定当前服务器的ip；root html/fgh  表示将请求转发到html文件夹中的fgh文件夹下
	server {
        listen       80;
        server_name  www.yichunhong.com;
		root html/fgh;

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }

	# nginx反向代理示例2：将来自域名api.yichunhong.com的访问，转发到访问当前系统的指定端口号，如下就是转发到当前系统的18080端口号中
	server {
        listen       80;
        server_name  api.yichunhong.com;

        location ~ {
			proxy_pass http://127.0.0.1:8081;
			proxy_redirect default ;
		}
    }

	# 与示例2同理：
    server {
        listen       80;
        server_name  manage.yichunhong.com;

        location ~ {
            proxy_pass http://127.0.0.1:8080;
            proxy_redirect default ;
        }
    }

}
